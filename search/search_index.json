{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introducci\u00f3n a Github Pages La presente web, es un recurso educativo abierto (REA) que ser\u00e1 presentado dentro del m\u00f3dulo de Lenguaje de Marcas y Sistemas de Gesti\u00f3n de Informaci\u00f3n para los Alumnos de CFGS (DAW,DAM y ASIR) de la familia de Inform\u00e1tica y Comunicaciones que permite a los alumnos poder publicar un documento HTML. La presente pr\u00e1ctica es presentada por el IES Aguadulce . En esta pr\u00e1ctica, vamos a centrarnos en como poder publicar nuestras webs realizadas en el lenguaje de Marcas HTML, a un servicio gratuito alojado por Github. En los siguientes documentos, vamos a aprender como crear un documento HTML con sus diferentes partes y posteriormente acceder a la web a trav\u00e9s de las diferentes opciones que nos provee el servicio de Github Pages. Requisitos de esta pr\u00e1ctica Para realizar esta pr\u00e1ctica, necesitar\u00e1s los siguientes materiales: Conexi\u00f3n a Internet. Cuenta en el servicio Github . Editor de c\u00f3digo; Por ejemplo: Visual Studio Code . Herramienta Git (opcional). Procesador de textos (para la actividad final propuesta). Qu\u00e9 aprenderemos en esta pr\u00e1ctica El objetivo de esta pr\u00e1ctica, es poder afianzar los conceptos que hemos aprendido durante la unidad pr\u00e1cticando la creaci\u00f3n de documentos HTML. Adem\u00e1s, vamos a aprender como publicar estos documentos HTML ya creados de tal forma que puedan estar disponibles en l\u00ednea. Gracias a servicios como Github Pages, podemos publicar nuestros documentos y que esten disponibles para todo el mundo de forma gratuita. Otro aspecto a tener en cuenta es que esta herramienta se incluye dentro de la web de Github; que es una de las m\u00e1s utilizada en el sector y es usada por millones de profesionales y usuarios. Criterios de Evaluaci\u00f3n para Esta pr\u00e1ctica Los siguientes criterios de Evaluaci\u00f3n ser\u00e1n utilizados para evaluar esta pr\u00e1ctica: 2.b) Se ha analizado la estructura de un documento HTML e identificado las secciones que lo componen. 2.c) Se ha reconocido la funcionalidad de las principales etiquetas y atributos del lenguaje HTML. 2.f) Se han utilizado herramientas en la creaci\u00f3n de documentos web. Licencia Esta web y su contenido; mientras se indique lo contario, esta dentro de la licencia de Creative Commons By S-A 4.0. Por lo que debe de ser utilizada bajo los par\u00e1metros de dicha licencia. Para m\u00e1s informaci\u00f3n, consulte la web de Creative Commons .","title":"Inicio"},{"location":"#introduccion-a-github-pages","text":"La presente web, es un recurso educativo abierto (REA) que ser\u00e1 presentado dentro del m\u00f3dulo de Lenguaje de Marcas y Sistemas de Gesti\u00f3n de Informaci\u00f3n para los Alumnos de CFGS (DAW,DAM y ASIR) de la familia de Inform\u00e1tica y Comunicaciones que permite a los alumnos poder publicar un documento HTML. La presente pr\u00e1ctica es presentada por el IES Aguadulce . En esta pr\u00e1ctica, vamos a centrarnos en como poder publicar nuestras webs realizadas en el lenguaje de Marcas HTML, a un servicio gratuito alojado por Github. En los siguientes documentos, vamos a aprender como crear un documento HTML con sus diferentes partes y posteriormente acceder a la web a trav\u00e9s de las diferentes opciones que nos provee el servicio de Github Pages.","title":"Introducci\u00f3n a Github Pages"},{"location":"#requisitos-de-esta-practica","text":"Para realizar esta pr\u00e1ctica, necesitar\u00e1s los siguientes materiales: Conexi\u00f3n a Internet. Cuenta en el servicio Github . Editor de c\u00f3digo; Por ejemplo: Visual Studio Code . Herramienta Git (opcional). Procesador de textos (para la actividad final propuesta).","title":"Requisitos de esta pr\u00e1ctica"},{"location":"#que-aprenderemos-en-esta-practica","text":"El objetivo de esta pr\u00e1ctica, es poder afianzar los conceptos que hemos aprendido durante la unidad pr\u00e1cticando la creaci\u00f3n de documentos HTML. Adem\u00e1s, vamos a aprender como publicar estos documentos HTML ya creados de tal forma que puedan estar disponibles en l\u00ednea. Gracias a servicios como Github Pages, podemos publicar nuestros documentos y que esten disponibles para todo el mundo de forma gratuita. Otro aspecto a tener en cuenta es que esta herramienta se incluye dentro de la web de Github; que es una de las m\u00e1s utilizada en el sector y es usada por millones de profesionales y usuarios.","title":"Qu\u00e9 aprenderemos en esta pr\u00e1ctica"},{"location":"#criterios-de-evaluacion-para-esta-practica","text":"Los siguientes criterios de Evaluaci\u00f3n ser\u00e1n utilizados para evaluar esta pr\u00e1ctica: 2.b) Se ha analizado la estructura de un documento HTML e identificado las secciones que lo componen. 2.c) Se ha reconocido la funcionalidad de las principales etiquetas y atributos del lenguaje HTML. 2.f) Se han utilizado herramientas en la creaci\u00f3n de documentos web.","title":"Criterios de Evaluaci\u00f3n para Esta pr\u00e1ctica"},{"location":"#licencia","text":"Esta web y su contenido; mientras se indique lo contario, esta dentro de la licencia de Creative Commons By S-A 4.0. Por lo que debe de ser utilizada bajo los par\u00e1metros de dicha licencia. Para m\u00e1s informaci\u00f3n, consulte la web de Creative Commons .","title":"Licencia"},{"location":"activate/","text":"Activar Github Pages (Opcional) Ya estamos a s\u00f3lo un paso de tener nuestra web en Github pages; para ello, vamos a activar la opci\u00f3n de Github Pages. En algunos casos esta opci\u00f3n se activa autom\u00e1ticamente al utilizar un repositorio para una web personal (con nombre nombreusuario.github.io ); pero siempre viene bien poder comprobar estas opciones. Para poder ver las opciones de Github pages, podemos usar la configuraci\u00f3n del repositorio; para ello, accedemos a la direcci\u00f3n de nuestro repositorio en github; es decir: https://github.com/nombreusuario/nombreusuario.github.io Una vez aqu\u00ed, pulsaremos en la configuraci\u00f3n o pesta\u00f1a settings tras ello, nos iremos a la partado pages . Configuraci\u00f3n Github Pages Aqu\u00ed podremos activar/desactivar la p\u00e1gina, elegir la rama y varias opciones m\u00e1s. Una vez revisadas las opciones, nuestra web deber\u00eda estar publicada en: https://nombreusuario.github.io","title":"Activar Github Pages"},{"location":"activate/#activar-github-pages-opcional","text":"Ya estamos a s\u00f3lo un paso de tener nuestra web en Github pages; para ello, vamos a activar la opci\u00f3n de Github Pages. En algunos casos esta opci\u00f3n se activa autom\u00e1ticamente al utilizar un repositorio para una web personal (con nombre nombreusuario.github.io ); pero siempre viene bien poder comprobar estas opciones. Para poder ver las opciones de Github pages, podemos usar la configuraci\u00f3n del repositorio; para ello, accedemos a la direcci\u00f3n de nuestro repositorio en github; es decir: https://github.com/nombreusuario/nombreusuario.github.io Una vez aqu\u00ed, pulsaremos en la configuraci\u00f3n o pesta\u00f1a settings tras ello, nos iremos a la partado pages . Configuraci\u00f3n Github Pages Aqu\u00ed podremos activar/desactivar la p\u00e1gina, elegir la rama y varias opciones m\u00e1s. Una vez revisadas las opciones, nuestra web deber\u00eda estar publicada en: https://nombreusuario.github.io","title":"Activar Github Pages (Opcional)"},{"location":"alternatives/","text":"Alternativas Adem\u00e1s del uso de ficheros en HTML, existen varias alternativas; ya que github pages permite utilizar algunos software ya existentes de generaci\u00f3n de p\u00e1ginas HTML est\u00e1ticas. Algunas de las alternativas compatibles con github Pages son por ejemplo Jekyll; que permite generar una web est\u00e1tica a partir de ficheros escritos en el lenguaje de marcas markdown. Generadores de P\u00e1ginas Est\u00e1ticas Adem\u00e1s de poder utilizar jekyll, existen otros software que permiten generar una p\u00e1gina HTML est\u00e1tica a partir de ficheros en Markdown o en otro formato; algunos de ellos son: Mkdocs: https://www.mkdocs.org/ . Pelican: https://getpelican.com/ . Blask: https://getblask.com . Actividad propuesta Escribe en un documento PDF, informaci\u00f3n sobre los anteriores generadores de contenido est\u00e1tico; escribiendo acerca de los siguientes apartados: Introducci\u00f3n de cada uno de los programas. Caracter\u00edsticas de cada uno de ellos. P\u00e1gina web y ejemplos de los mismos. Autor o autores de los mismos. Enlaces de inter\u00e9s. Adem\u00e1s, de los anteriormente mencionados, busca un generador de p\u00e1ginas web est\u00e1ticas de tu elecci\u00f3n y habla sobre el mismo.","title":"Otras alternativas"},{"location":"alternatives/#alternativas","text":"Adem\u00e1s del uso de ficheros en HTML, existen varias alternativas; ya que github pages permite utilizar algunos software ya existentes de generaci\u00f3n de p\u00e1ginas HTML est\u00e1ticas. Algunas de las alternativas compatibles con github Pages son por ejemplo Jekyll; que permite generar una web est\u00e1tica a partir de ficheros escritos en el lenguaje de marcas markdown.","title":"Alternativas"},{"location":"alternatives/#generadores-de-paginas-estaticas","text":"Adem\u00e1s de poder utilizar jekyll, existen otros software que permiten generar una p\u00e1gina HTML est\u00e1tica a partir de ficheros en Markdown o en otro formato; algunos de ellos son: Mkdocs: https://www.mkdocs.org/ . Pelican: https://getpelican.com/ . Blask: https://getblask.com . Actividad propuesta Escribe en un documento PDF, informaci\u00f3n sobre los anteriores generadores de contenido est\u00e1tico; escribiendo acerca de los siguientes apartados: Introducci\u00f3n de cada uno de los programas. Caracter\u00edsticas de cada uno de ellos. P\u00e1gina web y ejemplos de los mismos. Autor o autores de los mismos. Enlaces de inter\u00e9s. Adem\u00e1s, de los anteriormente mencionados, busca un generador de p\u00e1ginas web est\u00e1ticas de tu elecci\u00f3n y habla sobre el mismo.","title":"Generadores de P\u00e1ginas Est\u00e1ticas"},{"location":"gpages/","text":"Github Github es un servicio online, que permite tener diferentes proyectos o repositorios que son compartidos por millones de usuarios en todo el mundo. Github Logo Github permite desde un solo lugar, poder gestionar diferentes proyectos o repositorios normalmente usando la herramienta Git. Sin embargo, tambi\u00e9n provee una serie de servicios adicionales como pueden ser los siguientes: Gesti\u00f3n colaborativa de proyectos. Automatizaci\u00f3n de proyectos usando CI/CD (Integraci\u00f3n Cont\u00ednua/Despliegue Continuo). Gesti\u00f3n de Seguridad. Gesti\u00f3n de proyectos. Desarrollo Online (codeSpaces). Github Copilot (Inteligencia artificial de generaci\u00f3n de c\u00f3digo). P\u00e1ginas Web Gratuitas alojadas en Github (Github pages). Github pages Github pages, es un servicio gratuito ofrecido por Github que nos permite alojar nuestras p\u00e1ginas web sin necesidad de pagar por un alojamiento online o servidor. A trav\u00e9s de nuestro repositorio, Github Pages va a publicar la web de tal forma que estar\u00e1 disponible Online para todo el mundo. Github pages permite: Alojar p\u00e1ginas web est\u00e1ticas; es decir, que contengan ficheros HTML, CSS o JavaScript. Publicar en dominios propios (normalmente acabados en github.io) o personalizados. Publicar una web personal o relacionada con un proyecto. Permite no solo publicar los ficheros directamente en HTML sino utilizar motores de generaci\u00f3n de HTML est\u00e1tico como jekyll ; para crear p\u00e1ginas web a partir de otros Lenguajes de Marcas como Markdown . NOTA: La presente p\u00e1gina web, esta alojada utilizando este servicio.","title":"Github"},{"location":"gpages/#github","text":"Github es un servicio online, que permite tener diferentes proyectos o repositorios que son compartidos por millones de usuarios en todo el mundo. Github Logo Github permite desde un solo lugar, poder gestionar diferentes proyectos o repositorios normalmente usando la herramienta Git. Sin embargo, tambi\u00e9n provee una serie de servicios adicionales como pueden ser los siguientes: Gesti\u00f3n colaborativa de proyectos. Automatizaci\u00f3n de proyectos usando CI/CD (Integraci\u00f3n Cont\u00ednua/Despliegue Continuo). Gesti\u00f3n de Seguridad. Gesti\u00f3n de proyectos. Desarrollo Online (codeSpaces). Github Copilot (Inteligencia artificial de generaci\u00f3n de c\u00f3digo). P\u00e1ginas Web Gratuitas alojadas en Github (Github pages).","title":"Github"},{"location":"gpages/#github-pages","text":"Github pages, es un servicio gratuito ofrecido por Github que nos permite alojar nuestras p\u00e1ginas web sin necesidad de pagar por un alojamiento online o servidor. A trav\u00e9s de nuestro repositorio, Github Pages va a publicar la web de tal forma que estar\u00e1 disponible Online para todo el mundo. Github pages permite: Alojar p\u00e1ginas web est\u00e1ticas; es decir, que contengan ficheros HTML, CSS o JavaScript. Publicar en dominios propios (normalmente acabados en github.io) o personalizados. Publicar una web personal o relacionada con un proyecto. Permite no solo publicar los ficheros directamente en HTML sino utilizar motores de generaci\u00f3n de HTML est\u00e1tico como jekyll ; para crear p\u00e1ginas web a partir de otros Lenguajes de Marcas como Markdown . NOTA: La presente p\u00e1gina web, esta alojada utilizando este servicio.","title":"Github pages"},{"location":"projects/","text":"P\u00e1ginas de Proyectos Como hemos comentado, github Pages no solo permite generar p\u00e1ginas web personales o de organizaciones; sino que puede generar p\u00e1ginas web por proyecto o repositorio. Para ello, simplemente crearemos un repositorio y seguiremos los pasos anteriormente mencionados. En muchas ocasiones, se utilizan ramas alternativas para almacenar la web; la m\u00e1s utilizada es gh-pages . Una vez publicado el documento HTML y activadas las opciones, puedes encontrar la p\u00e1gina web en la siguiente direcci\u00f3n: https://nombreusuario.github.io/nombrerepositorio Por ejemplo la presente p\u00e1gina se considera una web de proyecto que esta en la direcci\u00f3n: https://zerasul.github.io/gpagesexampe Temas Github, tambi\u00e9n permite utilizar temas predefinidos que puedes encontrar en la siguiente direcci\u00f3n: https://pages.github.com/themes/","title":"P\u00e1ginas de proyectos"},{"location":"projects/#paginas-de-proyectos","text":"Como hemos comentado, github Pages no solo permite generar p\u00e1ginas web personales o de organizaciones; sino que puede generar p\u00e1ginas web por proyecto o repositorio. Para ello, simplemente crearemos un repositorio y seguiremos los pasos anteriormente mencionados. En muchas ocasiones, se utilizan ramas alternativas para almacenar la web; la m\u00e1s utilizada es gh-pages . Una vez publicado el documento HTML y activadas las opciones, puedes encontrar la p\u00e1gina web en la siguiente direcci\u00f3n: https://nombreusuario.github.io/nombrerepositorio Por ejemplo la presente p\u00e1gina se considera una web de proyecto que esta en la direcci\u00f3n: https://zerasul.github.io/gpagesexampe","title":"P\u00e1ginas de Proyectos"},{"location":"projects/#temas","text":"Github, tambi\u00e9n permite utilizar temas predefinidos que puedes encontrar en la siguiente direcci\u00f3n: https://pages.github.com/themes/","title":"Temas"},{"location":"references/","text":"Referencias W3CSchools: https://www.w3schools.com/ . Github: https://github.com . Github Pages: https://pages.github.com/ . Git SCM: https://git-scm.com . Mkdocs: https://www.mkdocs.org/ . Pelican: https://getpelican.com/ . Blask: https://getblask.com .","title":"Referencias"},{"location":"references/#referencias","text":"W3CSchools: https://www.w3schools.com/ . Github: https://github.com . Github Pages: https://pages.github.com/ . Git SCM: https://git-scm.com . Mkdocs: https://www.mkdocs.org/ . Pelican: https://getpelican.com/ . Blask: https://getblask.com .","title":"Referencias"},{"location":"repo/","text":"Repositorio Personal Una vez que tenemos el documento HTML, podemos pasar a subirlo a Github de tal forma que podamos publicarlo usando Github pages. Github pages, permite publicar dos tipos de web: Web Personal : que incluye la informaci\u00f3n personal de un usuario u organizaci\u00f3n. Web de Proyecto : Que incluye la informaci\u00f3n de un proyecto. Dependiendo de cada caso, podemos publicar un tipo u otro. Web Personal Comenzaremos con publicar la web personal; en este caso github permite crear una web por usuario u por organizaci\u00f3n. En Github, una organizaci\u00f3n puede ser una empresa o fundaci\u00f3n tanto p\u00fablica (Open Source); como privada. Estas web, estar\u00e1n bajo el dominio (salvo que se use un dominio personalizado) nombreusuario.github.io ; estos dominios son gratuitos. Para poder tener este dominio, tenemos que crear un repositorio en Github con exactamente el mismo nombre hemos comentado; es decir, nombreusuario.github.io ; para ello, seguiremos los siguientes pasos: Conectar a la web de Github: https://github.com/ . Entrar con nuestra cuenta (recuerda el usuario y contrase\u00f1a). Pulsar en el bot\u00f3n + que encontraremos en la parte superior derecha; y seleccionar la opci\u00f3n New Repository . En la siguiente p\u00e1gina escribir el nombre del repositorio con la siguiente estructura <nombreusuario>.github.io . Rellena la descripci\u00f3n y a\u00f1ade un README. Creaci\u00f3n de repositorio Por \u00faltimo pulsa en Create Repository para crear nuestro repositorio personal. Subir ficheros a Github Una vez creado el repositorio, tenemos que subir los ficheros que necesitamos con el documento HTML y los correspondientes recursos de la web (im\u00e1genes, audio,etc...). NOTA: Este apartado es opcional ya que puede utilizarse la web de github para subir los ficheros uno a uno. Para ello, vamos a utilizar la herramienta Git. Git, es una herramienta de control de versiones que podemos utilizar para trabajar con github. Esta herramienta de control de versiones, nos va a permitir tener un control de las distintas versiones del documento para poder tener un mejor control de este y no perder informaci\u00f3n. En primer lugar, vamos a descargarnos el repositorio de github, usando los siguientes comandos (recuerda que debes tener instalado git en tu sistema; que puedes encontrar en este enlace ). El siguiente comando descargar\u00e1 el readme que hay en github: git clone <url de nuestro repositorio> La URL de nuestro repositorio, podr\u00e1s encontrarla en la web de github, pulsando en el bot\u00f3n code y copiando la direcci\u00f3n de HTTPS. URL de nuestro repositorio Una vez el repositorio ha sido clonado, copiaremos el documento HTML y los correspondientes ficheros en la carpeta creada. git add . git commit -m \"subiendo HTML\" git push origin main Al realizar la operaci\u00f3n Push, nos pedir\u00e1 usuario y contrase\u00f1a de nuestra cuenta de github. NOTA : Puede que de un error a la hora de tratar de realizar el comando commit ; esto es por que se requiere configurar el usuario y mail con los siguientes comandos: git config --global user.name \"nombreusuario\" git config --global user.email \"email@email.com\" Una vez hemos realizado este apartado, ya solo nos queda activar github pages. Si necesitas m\u00e1s informaci\u00f3n acerca de Git y GIthub, dejamos un v\u00eddeo con un tutorial completo:","title":"Repositorio personal"},{"location":"repo/#repositorio-personal","text":"Una vez que tenemos el documento HTML, podemos pasar a subirlo a Github de tal forma que podamos publicarlo usando Github pages. Github pages, permite publicar dos tipos de web: Web Personal : que incluye la informaci\u00f3n personal de un usuario u organizaci\u00f3n. Web de Proyecto : Que incluye la informaci\u00f3n de un proyecto. Dependiendo de cada caso, podemos publicar un tipo u otro.","title":"Repositorio Personal"},{"location":"repo/#web-personal","text":"Comenzaremos con publicar la web personal; en este caso github permite crear una web por usuario u por organizaci\u00f3n. En Github, una organizaci\u00f3n puede ser una empresa o fundaci\u00f3n tanto p\u00fablica (Open Source); como privada. Estas web, estar\u00e1n bajo el dominio (salvo que se use un dominio personalizado) nombreusuario.github.io ; estos dominios son gratuitos. Para poder tener este dominio, tenemos que crear un repositorio en Github con exactamente el mismo nombre hemos comentado; es decir, nombreusuario.github.io ; para ello, seguiremos los siguientes pasos: Conectar a la web de Github: https://github.com/ . Entrar con nuestra cuenta (recuerda el usuario y contrase\u00f1a). Pulsar en el bot\u00f3n + que encontraremos en la parte superior derecha; y seleccionar la opci\u00f3n New Repository . En la siguiente p\u00e1gina escribir el nombre del repositorio con la siguiente estructura <nombreusuario>.github.io . Rellena la descripci\u00f3n y a\u00f1ade un README. Creaci\u00f3n de repositorio Por \u00faltimo pulsa en Create Repository para crear nuestro repositorio personal.","title":"Web Personal"},{"location":"repo/#subir-ficheros-a-github","text":"Una vez creado el repositorio, tenemos que subir los ficheros que necesitamos con el documento HTML y los correspondientes recursos de la web (im\u00e1genes, audio,etc...). NOTA: Este apartado es opcional ya que puede utilizarse la web de github para subir los ficheros uno a uno. Para ello, vamos a utilizar la herramienta Git. Git, es una herramienta de control de versiones que podemos utilizar para trabajar con github. Esta herramienta de control de versiones, nos va a permitir tener un control de las distintas versiones del documento para poder tener un mejor control de este y no perder informaci\u00f3n. En primer lugar, vamos a descargarnos el repositorio de github, usando los siguientes comandos (recuerda que debes tener instalado git en tu sistema; que puedes encontrar en este enlace ). El siguiente comando descargar\u00e1 el readme que hay en github: git clone <url de nuestro repositorio> La URL de nuestro repositorio, podr\u00e1s encontrarla en la web de github, pulsando en el bot\u00f3n code y copiando la direcci\u00f3n de HTTPS. URL de nuestro repositorio Una vez el repositorio ha sido clonado, copiaremos el documento HTML y los correspondientes ficheros en la carpeta creada. git add . git commit -m \"subiendo HTML\" git push origin main Al realizar la operaci\u00f3n Push, nos pedir\u00e1 usuario y contrase\u00f1a de nuestra cuenta de github. NOTA : Puede que de un error a la hora de tratar de realizar el comando commit ; esto es por que se requiere configurar el usuario y mail con los siguientes comandos: git config --global user.name \"nombreusuario\" git config --global user.email \"email@email.com\" Una vez hemos realizado este apartado, ya solo nos queda activar github pages. Si necesitas m\u00e1s informaci\u00f3n acerca de Git y GIthub, dejamos un v\u00eddeo con un tutorial completo:","title":"Subir ficheros a Github"},{"location":"web/","text":"Mi Web Personal Vamos a pensar en un caso pr\u00e1ctico; como profesionales que podemos a llegar a ser del sector, necesitaremos tener una web para poder no solo presentarnos; sino tambi\u00e9n para poner en un futuro alg\u00fan blog o incluso un portfolio con algunos de nuestros proyectos. Portfolio Web (Fuente: Figma ) Es por ello, que necesitaremos publicar un documento HTML, para poder tener toda esta informaci\u00f3n publicada en la web. Por supuesto utilizando los lenguajes de marcas y las distintas herramientas que disponemos. Algunas de estas herramientas, las hemos visto en clase y otras, vamos a verlas paso a paso para que cualquiera pueda seguir este recurso para resolver este caso pr\u00e1ctico. Creaci\u00f3n de un documento HTML5 Vamos a crear un documento HTML, que contenga toda la informaci\u00f3n necesaria para nuestra web personal. Es importante mencionar que vamos a trabajar bajo el est\u00e1ndar HTML5. HTML5 es el est\u00e1ndar para crear documentos basados en HTML (HyperText Markup Language) ; que es mantenido por la W3C (World Wide Web Consortium). En nuestra web, vamos a necesitar a\u00f1adir informaci\u00f3n no solo en forma de texto; sino tambi\u00e9n im\u00e1genes e incluso v\u00eddeos o audio. Por lo que necesitaremos guardar toda la informaci\u00f3n requerida. Por supuesto, para realizar esta pr\u00e1ctica, necesitar\u00e1s un editor de texto como Visual Studio Code ; aunque puedes usar el que m\u00e1s te guste. Sin m\u00e1s, vamos a crear la base de nuestro documento HTML; para ello crea un fichero de texto y llamalo index.html ; este ser\u00e1 nuestro fichero principal. Comenzaremos creando el esquema inicial de un documento HTML: <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"> <title>Mi p&aacute;gina</title> </head> <body> </body> </html> Este ser\u00e1 por donde comenzaremos a realizar nuestra web. Vamos a crear nuestra web personal utilizando tanto las etiquetas b\u00e1sicas de HTML, como las etiquetas sem\u00e1nticas propias de HTML5. Nuestra web debe tener los siguientes apartados: Una cabecera con nuestro nombre. Un men\u00fa con los siguientes apartados: Inicio : Que apuntar\u00e1 al inicio. Intereses : Que apuntar\u00e1 al apartado de intereses. Portfolio : Que apuntar\u00e1 al apartado de portfolio. Un apartado principal con 3 secciones: Inicio : Que contendr\u00e1 una foto nuestra y una descripci\u00f3n. Intereses : Que contendr\u00e1 una lista desordenada con nuestros intereses. Portfolio : Que contendr\u00e1 enlaces de interes o algunos proyectos que puedan interesarnos en caso de que no tengamos ninguno. Un footer con un disclaimer incluyendo el copyrigth y a\u00f1o. Puedes encontrar informaci\u00f3n sobre como crear el documento en los apuntes vistos en clase o en la web W3cSchools .","title":"Caso Pr\u00e1ctico (Web personal)"},{"location":"web/#mi-web-personal","text":"Vamos a pensar en un caso pr\u00e1ctico; como profesionales que podemos a llegar a ser del sector, necesitaremos tener una web para poder no solo presentarnos; sino tambi\u00e9n para poner en un futuro alg\u00fan blog o incluso un portfolio con algunos de nuestros proyectos. Portfolio Web (Fuente: Figma ) Es por ello, que necesitaremos publicar un documento HTML, para poder tener toda esta informaci\u00f3n publicada en la web. Por supuesto utilizando los lenguajes de marcas y las distintas herramientas que disponemos. Algunas de estas herramientas, las hemos visto en clase y otras, vamos a verlas paso a paso para que cualquiera pueda seguir este recurso para resolver este caso pr\u00e1ctico.","title":"Mi Web Personal"},{"location":"web/#creacion-de-un-documento-html5","text":"Vamos a crear un documento HTML, que contenga toda la informaci\u00f3n necesaria para nuestra web personal. Es importante mencionar que vamos a trabajar bajo el est\u00e1ndar HTML5. HTML5 es el est\u00e1ndar para crear documentos basados en HTML (HyperText Markup Language) ; que es mantenido por la W3C (World Wide Web Consortium). En nuestra web, vamos a necesitar a\u00f1adir informaci\u00f3n no solo en forma de texto; sino tambi\u00e9n im\u00e1genes e incluso v\u00eddeos o audio. Por lo que necesitaremos guardar toda la informaci\u00f3n requerida. Por supuesto, para realizar esta pr\u00e1ctica, necesitar\u00e1s un editor de texto como Visual Studio Code ; aunque puedes usar el que m\u00e1s te guste. Sin m\u00e1s, vamos a crear la base de nuestro documento HTML; para ello crea un fichero de texto y llamalo index.html ; este ser\u00e1 nuestro fichero principal. Comenzaremos creando el esquema inicial de un documento HTML: <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"> <title>Mi p&aacute;gina</title> </head> <body> </body> </html> Este ser\u00e1 por donde comenzaremos a realizar nuestra web. Vamos a crear nuestra web personal utilizando tanto las etiquetas b\u00e1sicas de HTML, como las etiquetas sem\u00e1nticas propias de HTML5. Nuestra web debe tener los siguientes apartados: Una cabecera con nuestro nombre. Un men\u00fa con los siguientes apartados: Inicio : Que apuntar\u00e1 al inicio. Intereses : Que apuntar\u00e1 al apartado de intereses. Portfolio : Que apuntar\u00e1 al apartado de portfolio. Un apartado principal con 3 secciones: Inicio : Que contendr\u00e1 una foto nuestra y una descripci\u00f3n. Intereses : Que contendr\u00e1 una lista desordenada con nuestros intereses. Portfolio : Que contendr\u00e1 enlaces de interes o algunos proyectos que puedan interesarnos en caso de que no tengamos ninguno. Un footer con un disclaimer incluyendo el copyrigth y a\u00f1o. Puedes encontrar informaci\u00f3n sobre como crear el documento en los apuntes vistos en clase o en la web W3cSchools .","title":"Creaci\u00f3n de un documento HTML5"}]}